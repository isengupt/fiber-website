{"version":3,"sources":["components/VisibilitySensor.js","MeshDash.js","App.js","reportWebVitals.js","index.js"],"names":["VisibilitySensor","props","state","active","this","once","children","otherProps","onChange","isVisible","setState","console","log","Component","Fatline","curve","width","color","speed","material","useRef","useFrame","current","uniforms","dashOffset","value","rotation","Math","random","PI","attach","vertices","ref","transparent","depthTest","lineWidth","dashArray","dashRatio","extend","meshline","OrbitControls","Lines","count","colors","useMemo","Array","fill","map","Curves","VivianiCurve","getPoints","parseInt","length","max","index","MeshDash","style","position","height","camera","fov","FormChain","trail1Ref","trail2Ref","trail3Ref","trail4Ref","useChain","class","FormTrail","open","trailRef","id","type","autocomplete","for","Chain","className","ChainTrail","Trail","items","React","Children","toArray","trail","useTrail","config","mass","tension","friction","opacity","x","from","rest","div","transform","interpolate","reverse","Octahedron","hovered","useSpring","pos","scale","THREE","degToRad","precision","line","v","lineBasicMaterial","mesh","App","useState","setActive","setHover","href","activeClassName","xmlns","viewBox","fill-rule","d","partialVisibility","onClick","e","onPointerOver","onPointerOut","delay","to","intensity","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd8d3a8d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nimport VSensor from \"react-visibility-sensor\";\n\nclass VisibilitySensor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: true\n    };\n  }\n\n  render() {\n    const { active } = this.state;\n    const { once, children, ...otherProps } = this.props;\n    return (\n      <VSensor\n        active={active}\n        onChange={isVisible => {\n          once &&\n            isVisible &&\n            this.setState({ active: false }, () =>\n              console.log(\"turned the things off\")\n            );\n        }}\n        {...otherProps}\n      >\n        {({ isVisible }) => children({ isVisible })}\n      </VSensor>\n    );\n  }\n}\n\n\n\nexport default VisibilitySensor;\n","import React, { useMemo, useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as meshline from \"threejs-meshline\";\nimport {\n  extend,\n  Canvas,\n  useFrame,\n  useThree,\n \n\n} from \"react-three-fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Curves } from \"three/examples/jsm/curves/CurveExtras\";\n\n\nimport \"./styles.css\";\n\n\nextend(meshline);\nextend({ OrbitControls });\n\n\n\n\n\n\nfunction Fatline({ curve, width, color, speed }) {\n  const material = useRef();\n\n  useFrame(() => (material.current.uniforms.dashOffset.value -= speed));\n\n  return (\n    <mesh rotation={[0, Math.random() * Math.PI, 0]}>\n      <meshLine attach=\"geometry\" vertices={curve} />\n      <meshLineMaterial\n        attach=\"material\"\n        ref={material}\n        transparent\n        depthTest={false}\n        lineWidth={width}\n        color={color}\n        dashArray={0.01}\n        dashRatio={0.95}\n      />\n    </mesh>\n  );\n}\n\nconst lineWidth = 0.2;\nconst count = 200;\n\nfunction Lines({ count, colors }) {\n  const lines = useMemo(\n    () =>\n      new Array(count).fill().map(() => {\n        const curve = new Curves.VivianiCurve(70).getPoints(30);\n\n        return {\n          color: colors[parseInt(colors.length * Math.random())],\n          width: lineWidth,\n          speed: Math.max(0.0001, 0.0005 * Math.random()),\n          curve\n        };\n      }),\n    [colors, count]\n  );\n  return lines.map((props, index) => <Fatline key={index} {...props} />);\n}\n\nexport default function MeshDash() {\n  return (\n    <div style={{position: 'absolute', width: '100%', height: '100%'}}>\n      <Canvas camera={{ position: [0, 300, 300], fov: 25 }}>\n \n        <Lines count={count} colors={[\"#9e91bc\", \"#4a4e7c\", \"#6f7db7\"]} />\n      </Canvas>\n    </div>\n  );\n}","import React, { useState, useRef, useMemo } from \"react\";\nimport { Spring } from \"react-spring/renderprops\";\nimport VisibilitySensor from \"./components/VisibilitySensor\";\nimport \"./styles.css\";\n\nimport * as THREE from \"three/src/Three\";\n\nimport { Canvas, useRender } from \"react-three-fiber\";\n\nimport { useSpring, animated } from \"react-spring/three\";\nimport { useTrail, animated as a, useChain } from \"react-spring\";\nimport MeshDash from \"./MeshDash\";\n\nconst FormChain = ({ isVisible }) => {\n  const trail1Ref = useRef();\n  const trail2Ref = useRef();\n  const trail3Ref = useRef();\n  const trail4Ref = useRef();\n\n  useChain(\n    isVisible\n      ? [trail1Ref, trail2Ref, trail3Ref, trail4Ref]\n      : [trail4Ref, trail3Ref, trail2Ref, trail1Ref],\n\n    isVisible ? [0.5, 1.0, 1.5, 2.0] : [0.5, 1.0, 1.5, 2.0]\n  );\n\n  return (\n    <div class=\"container\">\n      <form class=\"form-minimal\">\n        <FormTrail open={isVisible} trailRef={trail1Ref}>\n          <div class=\"minimal-input\">\n            <input\n              class=\"minimal-textfield\"\n              id=\"first-name\"\n              type=\"text\"\n              autocomplete=\"off\"\n            />\n            <div\n              class=\"textfield-underline\"\n              style={{ width: isVisible ? \"100%\" : \"0%\" }}\n            ></div>\n            <label for=\"first-name\">First name</label>\n          </div>\n        </FormTrail>\n\n        <FormTrail open={isVisible} trailRef={trail2Ref}>\n          <div class=\"minimal-input\">\n            <input\n              class=\"minimal-textfield\"\n              id=\"last-name\"\n              type=\"text\"\n              autocomplete=\"off\"\n            />\n            <div\n              class=\"textfield-underline\"\n              style={{ width: isVisible ? \"100%\" : \"0%\" }}\n            ></div>\n            <label for=\"last-name\">Last name</label>\n          </div>\n        </FormTrail>\n\n        <FormTrail open={isVisible} trailRef={trail3Ref}>\n          <div class=\"minimal-input\">\n            <input\n              class=\"minimal-textfield\"\n              id=\"email\"\n              type=\"text\"\n              autocomplete=\"off\"\n            />\n            <div\n              class=\"textfield-underline\"\n              style={{ width: isVisible ? \"100%\" : \"0%\" }}\n            ></div>\n            <label for=\"email\">Email</label>\n          </div>\n        </FormTrail>\n\n        <FormTrail open={isVisible} trailRef={trail4Ref}>\n          <button class=\"btn-minimal\" type=\"submit\">\n            Send\n          </button>\n        </FormTrail>\n      </form>\n    </div>\n  );\n};\n\nconst Chain = ({ isVisible }) => {\n  const trail1Ref = useRef();\n\n  const trail2Ref = useRef();\n\n  const trail3Ref = useRef();\n\n  useChain(\n    isVisible\n      ? [trail1Ref, trail2Ref, trail3Ref]\n      : [trail3Ref, trail2Ref, trail1Ref],\n\n    isVisible ? [0.4, 0.8, 1.2] : [0.4, 0.8, 1.2]\n  );\n\n  return (\n    <div className=\"page__container page__grid\">\n      <div className=\"grid__item\">\n        <ChainTrail open={isVisible} trailRef={trail1Ref}>\n          <div className=\"page__name\">INTRO</div>\n          <div className=\"page__line\">\n            <div className=\"line\"></div>\n          </div>\n          <div className=\"page__title\">\n            Animation videos for blockchain projects and ICO's\n          </div>\n          <div className=\"page__description page__big\">\n            Making complex topics clear\n          </div>\n          <div className=\"page__description page__big\">\n            Making complex topics clear\n          </div>\n        </ChainTrail>\n      </div>\n      <div className=\"grid__item\">\n        <ChainTrail open={isVisible} trailRef={trail2Ref}>\n          <div className=\"page__name\">01</div>\n          <div className=\"page__line\">\n            <div className=\"line\"></div>\n          </div>\n          <div className=\"page__title title__small\">\n            Animation videos for blockchain projects and ICO's\n          </div>\n          <div className=\"page__description page__small\">\n            Making complex topics clear\n          </div>\n        </ChainTrail>\n      </div>\n\n      <div className=\"grid__item\">\n        <ChainTrail open={isVisible} trailRef={trail3Ref}>\n          <div className=\"page__name\">01</div>\n          <div className=\"page__line\">\n            <div className=\"line\"></div>\n          </div>\n          <div className=\"page__title title__small\">\n            Animation videos for blockchain projects and ICO's\n          </div>\n          <div className=\"page__description page__small\">\n            Making complex topics clear\n          </div>\n        </ChainTrail>\n      </div>\n    </div>\n  );\n};\n\nfunction Trail({ open, children, ...props }) {\n  const items = React.Children.toArray(children);\n\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n  });\n  return (\n    <div className=\"flex__page trails-main\" {...props}>\n      <div>\n        {trail.map(({ x, height, ...rest }, index) => (\n          <a.div\n            key={items[index]}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n            }}\n          >\n            <a.div>{items[index]}</a.div>\n          </a.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction ChainTrail({ open, trailRef, children, ...props }) {\n  const items = React.Children.toArray(children);\n\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    ref: trailRef,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n    reverse: !open,\n  });\n  return (\n    <div className=\"flex__page trails-side\" {...props}>\n      <div>\n        {trail.map(({ x, height, ...rest }, index) => (\n          <a.div\n            key={items[index]}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n            }}\n          >\n            <a.div>{items[index]}</a.div>\n          </a.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction FormTrail({ open, trailRef, children, ...props }) {\n  const items = React.Children.toArray(children);\n\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    ref: trailRef,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n    reverse: !open,\n  });\n  return (\n    <div className=\"flex__page forms-side\" {...props}>\n      {trail.map(({ x, height, ...rest }, index) => (\n        <a.div\n          key={items[index]}\n          className=\"forms-text\"\n          style={{\n            ...rest,\n            transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n          }}\n        >\n          <a.div>{items[index]}</a.div>\n        </a.div>\n      ))}\n    </div>\n  );\n}\n\nfunction Octahedron({ active, hovered }) {\n  /*   const [active, setActive] = useState(false);\n  const [hovered, setHover] = useState(false); */\n  const vertices = [\n    [-1, 0, 0],\n    [0, 1, 0],\n    [1, 0, 0],\n    [0, -1, 0],\n    [-1, 0, 0],\n  ];\n  const { color, pos, ...props } = useSpring({\n    color: active ? \"hotpink\" : \"white\",\n    pos: active ? [0, 0, 2] : [0, 0, 0],\n    \"material-opacity\": hovered ? 0.6 : 0.25,\n    scale: active ? [2, 2, 2] : [1, 1, 1],\n    rotation: active\n      ? [THREE.Math.degToRad(180), 0, THREE.Math.degToRad(45)]\n      : [0, 0, 0],\n    config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 },\n  });\n  return (\n    <group>\n      <animated.line position={pos}>\n        <geometry\n          attach=\"geometry\"\n          vertices={vertices.map((v) => new THREE.Vector3(...v))}\n        />\n        <animated.lineBasicMaterial attach=\"material\" color={color} />\n      </animated.line>\n      <animated.mesh {...props}>\n        <octahedronGeometry attach=\"geometry\" />\n        <meshStandardMaterial attach=\"material\" color=\"grey\" transparent />\n      </animated.mesh>\n    </group>\n  );\n}\n\nfunction App() {\n  const [active, setActive] = useState(false);\n  const [hovered, setHover] = useState(false);\n  return (\n    <main>\n      <div className=\"frame\">\n        <div className=\"frame__title-wrap\">\n          <h1 className=\"frame__title\">Ishan Sengupta</h1>\n          <p className=\"frame__tagline\">Front-end experimentation</p>\n        </div>\n        <div className=\"frame__links\">\n          <a href=\"https://www.dropbox.com/s/129owvam7kedah1/ISHAN_SENGUPTA_RESUME.pdf?dl=0\">\n            Resume\n          </a>\n        </div>\n        <div className=\"frame__demos\">\n          <a\n            href=\"#\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z\"\n              ></path>\n            </svg>\n          </a>\n          <a\n            href=\"#\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n              ></path>\n            </svg>\n          </a>\n          <a\n            href=\"#\"\n            activeClassName=\"frame__demo--current\"\n            className=\"frame__demo\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n              width=\"16\"\n              height=\"16\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 2a.75.75 0 01.75.75v4.5h4.5a.75.75 0 010 1.5h-4.5v4.5a.75.75 0 01-1.5 0v-4.5h-4.5a.75.75 0 010-1.5h4.5v-4.5A.75.75 0 018 2z\"\n              ></path>\n            </svg>\n          </a>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div style={{ width: \"100%\" }}>\n          <div className=\"div\">\n            <div className=\"page__container\">\n              <MeshDash />\n              <VisibilitySensor partialVisibility>\n                {({ isVisible }) => (\n                  <>\n                    <Trail open={isVisible}>\n                      <div className=\"page__name\">INTRO</div>\n                      <div className=\"page__line\">\n                        <div\n                          className=\"line\"\n                          style={{ width: isVisible ? \"50px\" : \"0px\" }}\n                        ></div>\n                      </div>\n                      <div className=\"page__title\">\n                        Animation videos for blockchain projects and ICO's\n                      </div>\n                      <div className=\"page__description\">\n                        Making complex topics clear\n                      </div>\n                    </Trail>\n                  </>\n                )}\n              </VisibilitySensor>\n            </div>\n          </div>\n          <div className=\"div\">\n            <VisibilitySensor partialVisibility>\n              {({ isVisible }) => <Chain isVisible={isVisible} />}\n            </VisibilitySensor>\n          </div>\n          <div className=\"div\">\n            <div className=\"page__container page__grid__alternate\">\n              <div className=\"grid__item\">\n                <VisibilitySensor partialVisibility>\n                  {({ isVisible }) => (\n                    <Trail open={isVisible}>\n                      <div className=\"page__name\">IMPORTANT INFO</div>\n                      <div className=\"page__line\">\n                        <div className=\"line\"></div>\n                      </div>\n                      <div className=\"page__title\">\n                        Animation videos for blockchain projects and ICO's\n                      </div>\n                      <div\n                        className=\"page__description page__big page__flex\"\n                        onClick={(e) => setActive(!active)}\n                        onPointerOver={(e) => setHover(true)}\n                        onPointerOut={(e) => setHover(false)}\n                      >\n                        <div className=\"page__number\">01</div>\n                        <div>Unique style</div>\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">02</div>\n                        <div>Translation</div>\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">03</div>\n                        <div>Subtitles</div>\n                      </div>\n                    </Trail>\n                  )}\n                </VisibilitySensor>\n              </div>\n              <div className=\"grid__item full_height\">\n                <VisibilitySensor partialVisibility>\n                  {({ isVisible }) => (\n                    <>\n                      <Spring\n                        delay={300}\n                        to={{\n                          position: \"absolute\",\n                          opacity: isVisible ? 1 : 0,\n                        }}\n                      >\n                        {({ opacity }) => (\n                          <Canvas\n                            style={{ position: \"absolute\", opacity: opacity }}\n                          >\n                            <ambientLight color=\"lightblue\" />\n                            <pointLight\n                              color=\"white\"\n                              intensity={1}\n                              position={[10, 10, 10]}\n                            />\n                            <Octahedron active={active} hovered={hovered} />\n                          </Canvas>\n                        )}\n                      </Spring>\n                      <Trail open={isVisible}>\n                        <div className=\"page__description page__big page__flex page__bold\">\n                          <div className=\"page__number\">03</div>\n                          <div>Subtitles</div>\n                        </div>\n                        <div\n                          className=\"page__description\"\n                          style={{ fontWeight: \"bold\" }}\n                        >\n                          INTRO\n                        </div>\n                      </Trail>\n                    </>\n                  )}\n                </VisibilitySensor>\n              </div>\n            </div>\n          </div>\n          <div className=\"div\">\n            <div className=\"page__container page__grid__alternate\">\n              <div className=\"grid__item\">\n                <VisibilitySensor partialVisibility>\n                  {({ isVisible }) => (\n                    <Trail open={isVisible}>\n                      <div className=\"page__name\">INTRO</div>\n                      <div className=\"page__line\">\n                        <div className=\"line\"></div>\n                      </div>\n                      <div className=\"page__title\">\n                        Animation videos for blockchain projects and ICO's\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">02</div>\n                        <div>Translation</div>\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">03</div>\n                        <div>Subtitles</div>\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">02</div>\n                        <div>Translation</div>\n                      </div>\n                      <div className=\"page__description page__big page__flex\">\n                        <div className=\"page__number\">03</div>\n                        <div>Subtitles</div>\n                      </div>\n                    </Trail>\n                  )}\n                </VisibilitySensor>\n              </div>\n\n              <VisibilitySensor once>\n                {({ isVisible }) => <FormChain isVisible={isVisible} />}\n              </VisibilitySensor>\n              {/*              <div class=\"container\">\n                <form class=\"form-minimal\">\n                  <div class=\"minimal-input\">\n                    <input\n                      class=\"minimal-textfield\"\n                      id=\"first-name\"\n                      type=\"text\"\n                      autocomplete=\"off\"\n                    />\n                    <div class=\"textfield-underline\"></div>\n                    <label for=\"first-name\">First name</label>\n                  </div>\n                  <div class=\"minimal-input\">\n                    <input\n                      class=\"minimal-textfield\"\n                      id=\"last-name\"\n                      type=\"text\"\n                      autocomplete=\"off\"\n                    />\n                    <div class=\"textfield-underline\"></div>\n                    <label for=\"last-name\">Last name</label>\n                  </div>\n                  <div class=\"minimal-input\">\n                    <input\n                      class=\"minimal-textfield\"\n                      id=\"email\"\n                      type=\"text\"\n                      autocomplete=\"off\"\n                    />\n                    <div class=\"textfield-underline\"></div>\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <button class=\"btn-minimal\" type=\"submit\">\n                    Send\n                  </button>\n                </form>\n              </div> */}\n            </div>\n            {/*   <VisibilitySensor once>\n            {({ isVisible }) => (\n              <Spring delay={300} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => <h2 style={{ opacity }}>Hello</h2>}\n              </Spring>\n            )}\n          </VisibilitySensor> */}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}